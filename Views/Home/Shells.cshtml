@model List<DrumWebshop.Models.Shell>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Shells";
}

<div class="container">
    <h2>Our Shell Offer</h2>
    <form id="sortForm" asp-controller="Home" asp-action="Shells" method="get" class="d-flex">
        <label for="sortOrder" class="mr-2 mt-2" style="margin-right: 5px">Sort By:</label>
        <select class="form-control form-control-sm mr-2" id="sortOrder" name="sortOrder" style="width: 250px; height: 40px; margin-right: 5px;">
            <option value="-">-</option>
            <option value="Pieces count - High first">Pieces count - High first</option>
            <option value="Pieces count - Low first">Pieces count - Low first</option>
            <option value="Material - Alphabetical">Material - Alphabetical</option>
            <option value="Material - Reverse Alphabetical">Material - Reverse Alphabetical</option>
            <option value="Price - High first">Price - High first</option>
            <option value="Price - Low first">Price - Low first</option>
            <option value="Name - Alphabetical">Name - Alphabetical</option>
            <option value="Name - Reverse Alphabetical">Name - Reverse Alphabetical</option>
        </select>
        <button type="submit" class="btn btn-primary align-self-center" style="min-width: 80px; height: 40px;">Apply</button>
    </form>

    <div class="my-3"></div>

    <div class="row">
        @foreach (var shell in Model)
        {
            <div class="col-md-4 col-sm-6 mb-3">
                <div class="card">
                    <img src="@Url.Content(shell.Image)" class="card-img-top" alt="Snare Image">
                    <div class="card-body">
                        <h4 class="card-title">@shell.Name</h4>
                        <h5 class="card-text">€@shell.Price</h5>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">@shell.Pieces pieces</li>
                            @if (shell.PlyCount != 0)
                            {
                                <li class="list-group-item">@shell.PlyCount-ply @shell.Material shell</li>
                            }
                            else
                            {
                                <li class="list-group-item">@shell.Material shell</li>
                            }
                            <li class="list-group-item">Colour: @shell.Colour</li>
                        </ul>
                        <div class="d-flex justify-content-end">
                            @if (SignInManager.IsSignedIn(User) && !UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "PendingMember").Result)
                            {
                                <form method="post" action="@Url.Action("AddToCart", "Home", new { returnUrl = Context.Request.Path })">
                                    <input type="hidden" name="productId" value="@shell.Id" />
                                    <button type="submit" class="btn btn-primary">Add</button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>